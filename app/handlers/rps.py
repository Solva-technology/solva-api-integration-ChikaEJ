import logging
import random

from aiogram.types import CallbackQuery
from aiogram_dialog import DialogManager, StartMode
from aiogram_dialog.widgets.kbd import Button

from app.state import MySG
from app.utils.logging import configure_logging

configure_logging()


def play_rps(your_choice: str) -> str:
    rps_dict = {"rock": "–ö–∞–º–µ–Ω—å", "scissors": "–ù–æ–∂–Ω–∏—Ü—ã", "paper": "–ë—É–º–∞–≥–∞"}
    rps = list(rps_dict.values())

    your_choice_ru = rps_dict[your_choice]

    comp_choice = random.choice(rps)
    logging.info(
        "start game of rps",
        extra={"user_choice": your_choice_ru, "comp_choice": your_choice_ru},
    )
    if your_choice_ru == comp_choice:
        result = "–ù–∏—á—å—è ü§ù"
    elif (
        (your_choice_ru == "–ö–∞–º–µ–Ω—å" and comp_choice == "–ù–æ–∂–Ω–∏—Ü—ã")
        or (your_choice_ru == "–ù–æ–∂–Ω–∏—Ü—ã" and comp_choice == "–ë—É–º–∞–≥–∞")
        or (your_choice_ru == "–ë—É–º–∞–≥–∞" and comp_choice == "–ö–∞–º–µ–Ω—å")
    ):
        result = "–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ üéâ"
    else:
        result = "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ üò¢"

    logging.info("end of game and result is: %s", result, extra={"user": result})

    return f"–í–∞—à –≤—ã–±–æ—Ä: {your_choice_ru}\n–ö–æ–º–ø—å—é—Ç–µ—Ä –≤—ã–±—Ä–∞–ª: {comp_choice}\n‚û° {result}"


async def on_choice(callback: CallbackQuery, button: Button, manager: DialogManager):
    choice = button.widget_id
    await callback.answer(play_rps(choice))
    await manager.start(MySG.menu, mode=StartMode.RESET_STACK)
