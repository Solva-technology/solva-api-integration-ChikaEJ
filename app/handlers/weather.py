import os
from http import HTTPStatus

from aiogram.types import Message
from aiogram_dialog import DialogManager, StartMode
from dotenv import load_dotenv
import aiohttp

from state import MySG

load_dotenv()

API_KEY = os.getenv('OPENWEATHER_API_KEY')
BASE_URL = os.getenv('OPENWEATHER_BASE_URL')


def format_weather(data: dict) -> str:
    city = data["name"]
    description = data["weather"][0]["description"].capitalize()
    temp = round(data["main"]["temp"])
    feels_like = round(data["main"]["feels_like"])
    humidity = data["main"]["humidity"]
    wind_speed = data["wind"]["speed"]

    return (
        f"üå§ –ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ *{city}*\n\n"
        f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feels_like}¬∞C)\n"
        f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n"
        f"üí® –í–µ—Ç–µ—Ä: {wind_speed} –º/—Å\n"
        f"‚òÅÔ∏è –°–æ—Å—Ç–æ—è–Ω–∏–µ: {description}"
    )

async def get_weather_of_city(city):
    params = {
        'q': city,
        'appid': API_KEY,
        'units': 'metric',
        'lang': 'ru',
    }
    async with aiohttp.ClientSession() as session:
        async with session.get(BASE_URL, params=params) as response:
            if response.status == HTTPStatus.OK:
                weather = await response.json()
                text_reply = format_weather(weather)
                return text_reply
            return '–ö–∞–∫–∞—è –±—ã –Ω–µ –±—ã–ª–∞, –ø–æ–≥–æ–¥–∞ —Ç—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –∫—É–ø–∏—Ç—å –ø–∏–≤–æ, –ø–æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–ª–∏—á–Ω—ã–π —Ñ–∏–ª—å–º –∏ –Ω–∞—Å–ª–∞–¥–∏—Ç—Å—è –ø—Ä–∏—è—Ç–Ω—ã–º –æ–±—â–µ—Å—Ç–≤–æ–º! '


async def process_city(message: Message, widget, manager: DialogManager):
    city = message.text.strip()
    weather = await get_weather_of_city(city)
    await message.answer(weather)
    await manager.start(MySG.menu, mode=StartMode.RESET_STACK)
